version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: ./backend/.env
    ports:
      - "5432:5432"
    restart: always

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3
    ports:
      - "5672:5672"
    env_file: ./backend/.env
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - rabbitmq
    
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  worker:
    build: ./backend
    command: taskiq worker app.tasks.taskiq:broker
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    restart: always
    depends_on:
      - rabbitmq
      - db
      - redis

  scheduler:
    build: ./backend
    command: taskiq scheduler app.tasks.taskiq:scheduler
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    restart: always
    depends_on:
      - rabbitmq
      - db
  
volumes:
  postgres_data:
  rabbitmq_data: