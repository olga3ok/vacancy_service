version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: ./backend/.env
    ports:
      - "5432:5432"
    restart: always

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - rabbitmq
    
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  celery:
    build: ./backend
    restart: always
    command: celery -A celery_app.celery worker --loglevel=info -B
    volumes:
      - ./backend:/app
    env_file: ./backend/.env
    depends_on:
      - backend
      - rabbitmq
  
volumes:
  postgres_data:
  rabbitmq_data: